@model ass_2.Models.Dish

@{
    ViewBag.Title = "Edit";
}
<div style="display: flex; justify-content: space-between;">
    <div style="flex: 1;">
        <img src="~/Content/picture/h2.jpg" style="width:500px;" />
    </div>
    <div style="flex: 1;">
        @using (Html.BeginForm())
        {
            <h2>Edit</h2>
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Dish</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Name)

                <div class="form-group">
                    @Html.LabelFor(model => model.steps, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.steps, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.steps, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.material, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.material, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.material, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
